<div class="mdl-grid demo-content">
    <div class="demo-card-wide mdl-card mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-grid">
        <div class="mdl-card__title">
            <h2 class="mdl-card__title-text"><i class="material-icons" role="presentation">computer</i>Browser Versions
            </h2>
        </div>
        <div id='chart' class="chart">
            <div class="mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active"></div>
        </div>
    </div>
    <div class="demo-card-wide mdl-card mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-grid">
        <div class="mdl-card__title">
            <h2 class="mdl-card__title-text"><i class="material-icons" role="presentation">devices</i>Device types</h2>
        </div>
        <div id='devices-chart' class="chart">
            <div class="mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active"></div>
        </div>
    </div>
    <div class="demo-card-wide mdl-card mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-grid">
        <div class="mdl-card__title">
            <h2 class="mdl-card__title-text"><i class="material-icons" role="presentation">devices</i>Browser & Device
                types</h2>
        </div>
        <div id='browser-device-chart' class="chart">
            <div class="mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active"></div>
        </div>
    </div>
    <script>
        d3.select('#chart').classed('loading', true);
        var startDate = moment().subtract(1, "month").format("YYYY-MM-DD");
        var endDate = moment().format("YYYY-MM-DD");
        d3.json('/browser/api/browsers/' + startDate + '/' + endDate, function(error, data) {
            if(error) {
                return console.warn(error);
            }

            d3.select('#chart').classed('loading', false);

            var template = {
                bindto: '#chart',
                data: {
                    columns: data.rows,
                    type: 'pie',
                    order: null
                },
                legend: {
                    position: 'right'
                }
            };

            var chart = c3.generate(template);
        });

        d3.select('#devices-chart').classed('loading', true);
        var startDate = moment().subtract(1, "month").format("YYYY-MM-DD");
        var endDate = moment().format("YYYY-MM-DD");
        d3.json('/browser/api/devices/' + startDate + '/' + endDate, function(error, data) {
            if(error) {
                return console.warn(error);
            }

            d3.select('#devices-chart').classed('loading', false);

            var modifiedResult = data.rows,
                    loopData;
            for(var i = 0, l = modifiedResult.length; i < l; i++) {
                loopData = modifiedResult[i];
                loopData[0] = loopData[0].capitalize();
            }

            var template = {
                bindto: '#devices-chart',
                data: {
                    columns: modifiedResult,
                    type: 'pie',
                },
                legend: {
                    position: 'right'
                }
            };

            var chart = c3.generate(template);
        });

        String.prototype.capitalize = function() {
            return this.charAt(0).toUpperCase() + this.slice(1);
        };

        d3.select('#browser-device-chart').classed('loading', true);
        var startDate = moment().subtract(1, "month").format("YYYY-MM-DD");
        var endDate = moment().format("YYYY-MM-DD");
        d3.json('/browser/api/browser-devices/' + startDate + '/' + endDate, function(error, data) {
            if(error) {
                return console.warn(error);
            }

            d3.select('#browser-device-chart').classed('loading', false);

            var modifiedResult = data.rows,
                    loopData;
            for(var i = 0, l = modifiedResult.length; i < l; i++) {
                loopData = modifiedResult[i];
                loopData[0] = (loopData[1]).capitalize() + " " + loopData[0];
                loopData.splice(1, 1);
            }

            var template = {
                bindto: '#browser-device-chart',
                data: {
                    columns: modifiedResult,
                    type: 'donut',
                    order: null
                },
                legend: {
                    position: 'right',
                    show: false
                }
            };

            var chart = c3.generate(template);
        });
    </script>
</div>
