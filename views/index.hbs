<div class="mdl-grid demo-content">
    <div class="demo-card-wide mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
        <div class="mdl-card__title">
            <h2 class="mdl-card__title-text">Users & Pageviews</h2>
        </div>
        <div id='chart' class="chart">
            <div class="mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active"></div>
        </div>
        <div class="mdl-card__actions mdl-card--border">
            <button id="last-week"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">
                Last Week
            </button>
            <button id="last-month"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">
                Last Month
            </button>
            <button id="last-year"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">
                Last Year
            </button>
            <input id="start-time" name="start-time" type="date">
            <input id="end-time" name="end-time" type="date">
            <button id="get-button"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent">
                Get
            </button>
        </div>
        <div class="mdl-card__menu">
            <button id="demo-menu-lower-right"
                    class="mdl-button mdl-js-button mdl-button--icon chart-csv">
                <i class="material-icons">file_download</i>
            </button>
        </div>
    </div>
    <script>
        var chart, chartData;

        function replaceChartDataWithResponse(startDate, endDate) {
            d3.json('/traffic/' + startDate + '/' + endDate, function(error, data) {
                if(error) {
                    return console.warn(error);
                }

                d3.select('#start-time').attr('value', moment(startDate).format("YYYY-MM-DD"));
                d3.select('#end-time').attr('value', moment(endDate).format("YYYY-MM-DD"));

                chartData = data.rows;
                var headers = data.columnHeaders.map(function(val) {
                    return val.name;
                });
                data.rows.unshift(headers.slice());
                chart.load({
                    rows: chartData
                })
            })
        }

        function getLastWeekData() {
            startDate = moment().subtract(1, "week").format("YYYY-MM-DD");
            endDate = moment().format("YYYY-MM-DD");
            replaceChartDataWithResponse(startDate, endDate);
        }

        function getLastMonthData() {
            startDate = moment().subtract(1, "month").format("YYYY-MM-DD");
            endDate = moment().format("YYYY-MM-DD");
            replaceChartDataWithResponse(startDate, endDate);
        }

        function getLastYearData() {
            startDate = moment().subtract(1, "year").format("YYYY-MM-DD");
            endDate = moment().format("YYYY-MM-DD");
            replaceChartDataWithResponse(startDate, endDate);
        }

        d3.select('#last-week').on("click", getLastWeekData);
        d3.select('#last-month').on("click", getLastMonthData);
        d3.select('#last-year').on("click", getLastYearData);

        d3.select('.chart-csv').on('click', function() {
            window.open('/traffic/csv/' + startDate + '/' + endDate);
        });

        d3.select('#get-button').on('click', function() {
            startDate = document.getElementById('start-time').value;
            endDate = document.getElementById('end-time').value;
            d3.json('/traffic/' + startDate + '/' + endDate,
                    function(error, data) {
                        if(error) {
                            return console.warn(error);
                        }

                        d3.select('#start-time').attr('value', moment(startDate).format("YYYY-MM-DD"));
                        d3.select('#end-time').attr('value', moment(endDate).format("YYYY-MM-DD"));

                        chart.load({
                            rows: chartData.concat(data.rows)
                        })
                    })
        });

        d3.select('#chart').classed('loading', true);

        var startDate = moment().subtract(1, "month").format("YYYY-MM-DD");
        var endDate = moment().format("YYYY-MM-DD");
        d3.json('/traffic/' + startDate + '/' + endDate, function(error, data) {
            if(error) {
                return console.warn(error);
            }

            d3.select('#chart').classed('loading', false);

            d3.select('#start-time').attr('value', moment(startDate).format("YYYY-MM-DD"));
            d3.select('#end-time').attr('value', moment(endDate).format("YYYY-MM-DD"));

            chartData = data.rows;
            var headers = data.columnHeaders.map(function(val) {
                return val.name;//.split(":").join("_");
            });
            data.rows.unshift(headers.slice());
            var xAxis = headers.shift();
            var template = {
                bindto: '#chart',
                data: {
                    rows: data.rows,
                    x: xAxis,
                    xFormat: '%Y%m%d',
                    keys: {
                        value: headers
                    },
                    axes: {
                        "ga:users": 'y',
                        "ga:pageviews": 'y2'
                    }
                },
                axis: {
                    x: {
                        label: {
                            text: 'Date',
                            position: 'outer-center'
                        },
                        type: 'timeseries',
                        tick: {
                            format: "%d-%m-%Y"
                        }
                    },
                    y: {
                        label: {
                            text: 'Users',
                            position: 'outer-middle'
                        }
                    },
                    y2: {
                        label: {
                            text: 'Page views',
                            position: 'outer-middle'
                        },
                        show: true
                    }
                },
                grid: {
                    y: {
                        show: true
                    }
                }
            };
            chart = c3.generate(template);
        });
    </script>
</div>
